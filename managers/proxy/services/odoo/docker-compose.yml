networks:
  dockernet:
    external:
      true



services:
  odoo.web:
    image: odoo:17
    container_name: odoo.web
    restart: unless-stopped
    user: root
    depends_on:
      - odoo.db
    networks:
      - dockernet
    environment:
      - HOST=odoo.db
      - USER=odoo_user
      - PASSWORD=odoo_password
    volumes:
      - ./config:/etc/odoo:ro
      - odoo_data_web:/var/lib/odoo:rw
      - odoo_data_web:/mnt/extra-addons:rw
    labels:
      - traefik.enable=true
      - traefik.http.routers.odoo-rtr.entrypoints=http,https
      - traefik.http.routers.odoo-rtr.rule=Host(`odoo.homestack.me`)
      - traefik.http.routers.odoo-rtr.tls=true
      - traefik.http.routers.odoo-rtr.tls.certresolver=development
      - traefik.http.routers.odoo-rtr.service=odoo-svc
      - traefik.http.services.odoo-svc.loadbalancer.server.port=8069

  odoo.db:
    image: postgres:16-alpine
    container_name: odoo.db
    restart: unless-stopped
    user: root
    networks:
      - dockernet
    environment:
      - POSTGRES_USER=odoo_user
      - POSTGRES_PASSWORD=odoo_password
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=postgres
    volumes:
      - odoo_data_db:/var/lib/postgresql/data/pgdata:rw
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.odoo-db-rtr.entrypoints=postgres
      - traefik.tcp.routers.odoo-db-rtr.rule=HostSNI(`db.odoo.homestack.me`)
      - traefik.tcp.routers.odoo-db-rtr.tls=true
      - traefik.tcp.routers.odoo-db-rtr.tls.passthrough=true
      - traefik.tcp.routers.odoo-db-rtr.tls.certresolver=development
      - traefik.tcp.services.odoo-db-svc.loadbalancer.server.port=5432

volumes:
  odoo_data_web:
  odoo_data_db: